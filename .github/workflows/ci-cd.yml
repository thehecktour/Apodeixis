name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-report:
    name: Test and Notify API
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v2

      - name: üõ†Ô∏è Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üöÄ Send deploy data for my API
        env:
          API_URL: https://patroa.onrender.com/deploys
        run: |
          echo "Montando payload JSON com seguran√ßa via jq..."

          jq -n \
            --arg commit_hash "${{ github.sha }}" \
            --arg commit_message "${{ github.event.head_commit.message }}" \
            --arg commit_timestamp "${{ github.event.head_commit.timestamp }}" \
            --arg author "${{ github.actor }}" \
            --arg author_username "${{ github.event.head_commit.author.name }}" \
            --arg author_email "${{ github.event.head_commit.author.email }}" \
            --arg committer_name "${{ github.event.head_commit.committer.name }}" \
            --arg committer_email "${{ github.event.head_commit.committer.email }}" \
            --arg branch "${{ github.ref_name }}" \
            --arg ref "${{ github.ref }}" \
            --arg base_ref "${{ github.base_ref || '' }}" \
            --arg event_name "${{ github.event_name }}" \
            --arg repository "${{ github.repository }}" \
            --arg repository_owner "${{ github.repository_owner }}" \
            --arg repository_url "https://github.com/${{ github.repository }}" \
            --arg repository_full_name "${{ github.repository }}" \
            --arg workflow "${{ github.workflow }}" \
            --arg workflow_job "${{ github.job }}" \
            --arg workflow_run_id "${{ github.run_id }}" \
            --arg workflow_run_number "${{ github.run_number }}" \
            --arg workflow_url "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --arg pull_request_number "${{ github.event.pull_request.number || '' }}" \
            --arg pull_request_title "${{ github.event.pull_request.title || '' }}" \
            --arg pull_request_user "${{ github.event.pull_request.user.login || '' }}" \
            --arg pull_request_base "${{ github.event.pull_request.base.ref || '' }}" \
            --arg pull_request_head "${{ github.event.pull_request.head.ref || '' }}" \
            --arg deployment_status "success" \
            --arg triggered_by "${{ github.actor }}" \
            '{
              commit_hash: $commit_hash,
              commit_message: $commit_message,
              commit_timestamp: $commit_timestamp,
              author: $author,
              author_username: $author_username,
              author_email: $author_email,
              committer_name: $committer_name,
              committer_email: $committer_email,
              branch: $branch,
              ref: $ref,
              base_ref: $base_ref,
              event_name: $event_name,
              repository: $repository,
              repository_owner: $repository_owner,
              repository_url: $repository_url,
              repository_full_name: $repository_full_name,
              workflow: $workflow,
              workflow_job: $workflow_job,
              workflow_run_id: $workflow_run_id,
              workflow_run_number: $workflow_run_number,
              workflow_url: $workflow_url,
              pull_request_number: $pull_request_number,
              pull_request_title: $pull_request_title,
              pull_request_user: $pull_request_user,
              pull_request_base: $pull_request_base,
              pull_request_head: $pull_request_head,
              deployment_status: $deployment_status,
              status: $deployment_status,
              triggered_by: $triggered_by
            }' > payload.json

          echo "Conte√∫do da payload.json:"
          cat payload.json | jq .

          echo "Enviando para a API..."
          curl -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            --data @payload.json
